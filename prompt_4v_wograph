{
    "find_component_system" : "I want to generate the 3D model in the multi-views images. Please describe the components in the style of mechanical components. Firstly, generate the individual components that make up the model.",
    "find_component_user" : "Please think step by step and then give me all the components of the model (each is a single unit, avoid a composite set that contains multiple objects) that appears in these images. For components that appear multiple times, use component_name_n to represent each. Structure your output like: component_list ={ 'name_1' : 'description_1', 'name_2' : 'description_2', … } Each with a general descriptive name and a very detailed visual description. Requirement: The number of generated components must be complete and they need to be able to be assembled into the model in the images. The description of the component should describe the appearance of the component in detail based on the image. Please follow these steps: 1/ List a component_list of all the components' name; 2/ Check whether the component_list can be assembled into the model in the images; 3/ Describe all the components in detail and output as structured.",
    "find_component_user_latest":"Please think step by step and then give me all the components of the model (each is a single unit, avoid a composite set that contains multiple objects) that appears in these images. For components that appear multiple times, use num to represent their number. Structure your output like: component_list ={ 'component_name' : {'num': 'number of component','description':'description for component'}, 'component_name' : {'num': 'number of component','description':'description for component'},  … } Each with a general descriptive name and a very detailed visual description. Requirement: The number of generated components must be complete and they need to be able to be assembled into the model in the images. The description of the component should describe the appearance of the component in detail based on the images. Please follow these steps: 1/ List a component_list of all the components name; 2/ Check whether the number of each component is right; 3/ Describe all the components in detail and output as structured.",
    "find_component_example":"Here is an example for your reference so that you can better complete the next tasks: 1. As can be seen from the images, the flexible coupling model mainly consists of three parts: a central shaft, a shaft on each left and right sides, and a flexible coupling structure between the central shaft and the left and right shafts. Each coupling's the flexible structure consists of two flanges, a diaphragm between the flanges, and four fasteners consisting of screws and nuts. 2. It can be considered that the model consists of the following components: Central_Shaft; Flange_Plate_1; Flange_Plate_2; Flange_Plate_3; Flange_Plate_4; Spacer_Ring_1; Spacer_Ring_2; Bolt_1; Bolt_2; Bolt_3; Bolt_4; Nut_1; Nut_2; Nut_3; Nut_4; 3. After observing the shape of each component, the final structured output of the component description is as follows: component_list = { 'central_shaft': 'A cylindrical shaft with a central hole running through its length. Located in the middle of the model.', 'input_shaft': 'A cylindrical shaft with a central hole running through its length. On the far left side of the model. One end is connected to the flange plate.', 'output_shaft': 'Symmetrical to the output shaft. A cylindrical shaft with a central hole running through its length. On the far right side of the model. One end is connected to the flange plate.', 'flange_plate_1': 'A circular plate with a central hole and four evenly spaced holes around its perimeter.', 'flange_plate_2': 'Identical to Flange Plate 1, this circular plate also has a central hole and four evenly spaced holes around its perimeter.', 'flange_plate_3': 'Identical to Flange Plate 1, this circular plate also has a central hole and four evenly spaced holes around its perimeter.', 'flange_plate_4': 'Identical to Flange Plate 1, this circular plate also has a central hole and four evenly spaced holes around its perimeter.', 'spacer_ring_1': 'A cylindrical ring with a central hole, designed to fit around the central shaft. The ring has a uniform thickness and is placed between the flange plates.', 'spacer_ring_2': 'Identical to Spacer Ring 1, this cylindrical ring also has a central hole and a uniform thickness. It is placed between the flange plates.', 'bolt_1': 'A cylindrical bolt with a hexagonal head, designed to fit through the holes in the flange plates and spacer rings. The bolt has a threaded end for securing with a nut.', 'bolt_2': 'Identical to Bolt 1, this cylindrical bolt also has a hexagonal head and a threaded end. It is used to secure the flange plates and spacer rings together.', 'bolt_3': 'Identical to Bolt 1, this cylindrical bolt also has a hexagonal head and a threaded end. It is used to secure the flange plates and spacer rings together.', 'bolt_4': 'Identical to Bolt 1, this cylindrical bolt also has a hexagonal head and a threaded end. It is used to secure the flange plates and spacer rings together.', 'nut_1': 'A hexagonal nut designed to fit onto the threaded end of Bolt 1. It is used to secure the bolt in place.', 'nut_2': 'Identical to Nut 1, this hexagonal nut is used to secure Bolt 2 in place.', 'nut_3': 'Identical to Nut 1, this hexagonal nut is used to secure Bolt 3 in place.', 'nut_4': 'Identical to Nut 1, this hexagonal nut is used to secure Bolt 4 in place.' This is just an example for you to learn. Please answer this conversation with 'OK', I will continue to input information. }",
    "find_component_example_latest":"Here is an example for you to learn:1/As can be seen from the images,the flexible coupling model mainly consists of central craft,input craft,output craft,spacer ring,flange plate,nut,bolt;\n2/The number of each component:1central craft,1input craft,1output craft,2spacer ring,4flange plate,16nut,8bolt;\n3/Structure the output like: component_list ={ 'central_craft' : {'num': '1','description':'A cylinder as the central craft'}, 'input_craft' : {'num': '1','description':'A cylinder'},'output_craft' : {'num': '1','description':'A cylinder'},'spacer_ring' : {'num': '2','description':'A very flat ring'},'flange_plate' : {'num': '4','description':'Flat hollow cylinder'},'nut' : {'num': '16','description':'Small hexagonal cylinder as nut'},'bolt' : {'num': '8','description':'Slender cylinder as bolt'}}This is just an example for you to learn. Please answer this conversation with 'OK', I will enter the problem you need to solve in a moment.",
   
    "compare_component_system" : "I want to generate the 3D model in the multi-views images provided. And now I need you to check that this component_list can be completely assembled into the model in the uploaded images. Please first check whether the component name and description are correct, and secondly check whether the number of components is correct. If correct, please output the original component_list. If incorrect, please output the modified component_list. Structure your output like : component_list ={ 'component_name' : {'num': 'number of component','description':'description for component'}, 'component_name' : {'num': 'number of component','description':'description for component'},  … } ",
  
    "code_system":"I am writing the OpenSCAD code to generate the 3D model of a flexible coupling in the multi-views images provided.  Please based on the images and the information provided to generate each component's OpenSCAD code to build the identical model like the images.",
    "code_user": "Please follow the steps below to generate OpenSCAD code：\n1/Review the multi-views iamges of the model you need to generate;\n2/Review the component_list: %s\n3/Generate the OpenSCAD code to build the 3D model similar to the images \n5/Please output the code in a structured format: Add `//scad_start` at the beginning of the code and `//scad_end` at the end.",

    "difference_system":"I am writing the differences between the model needed to modify and the original model. Now you have some images of the modified model and some images of the original model. All you have to do is compare the modified model with the original model and describe the differences in shape and position between them. I will provide you with a set of components that make up the model and ask you to compare them in detail based on the component list.",
    "difference_user" :"The images you need to compare are after this text. The first four images are the models that need to be modified, and the last four images are the original models. Please describe the differences between the two models according to the following steps: 1/First review the list of components that make up the model, %s ; 2/Based on the component list, describe the differences in the shapes of each component of the two models; 3/Based on the differences between the shapes of the components in the two models, focus on checking the differences in the position of each component，please suggest how to modify the shapes of the components in the modified model to make it more similar to the original model. 4/Please structure your final output like: differences_list={'component_name' : 'differences between two models in shape and position and how to modify it more similar to the component of original model','component_name' : '',……}",
    
    "modify_system":"I am writing  OpenSCAD code to generate the 3D model in multi-view images. Now I have one version code, but the model generated by this code are not identical with the original model. I will provide the list of component differences and the suggest for modifying, please based them  to modify the OpenSCAD code.",
    "modify_user":"The images you can refer to are after this text. The first four images are the models that need to be modified, and the last four images are the original models. Here are the OpenSCAD code you need to modify ,%s, and the differences_list you can refer to, %s. Please output the code in a structured format: Add `//scad_start` at the beginning of the code and `//scad_end` at the end.",

    "extract_system":"You are an assistant that processes OpenSCAD code. Your task is to receive a string containing explanations and code, and then extract and return only the executable OpenSCAD code without any explanation or comments. Ensure that the output is valid and executable OpenSCAD code.",
    "extract_user":"Please extract only the executable SCAD code from the following input, removing any explanations or comments. The input string with explanation and SCAD code is as follows: %s. Structure your output as:\n//scad_start\n<input_code4CAD>\n//scad_end\n"


}
